attact(Table_3_7)
attach(Table_3_7)
library(readxl)
Table_3_7 <- read_excel("C:/Windows/System32/Data Sets/Table 3_7.xls")
View(Table_3_7)
attach(Table_3_7)
head(Table_3_7)
data=Table_3_7[1:33:-1]
ata=Table_3_7[1:33,-1]
Data=Table_3_7[1:33,-1]
summary(Data)
length(NYSE)
length(NYSE)
library(readxl)
Table_7_6 <- read_excel("D:/HK2-Năm2/Kinhteluong/Data Sets/Table 7_6.xls")
View(Table_7_6)
View(Table_3_7)
View(Table_3_7)
library(readxl)
Table_7_6 <- read_excel("C:/Windows/System32/Data Sets/Table 7_6.xls",
skip = 11)
View(Table_7_6)
attach(Table_7_6)
data=Table_7_6[,3:6]
data
cbind(c(rep(1,16)),data)
stt = c(rep(1,16))
data1 = cbine(stt,data)
data1 = cbind(stt,data)
data1
t(data1)
x1=data.matrix(data1)
t(x1)%*%x1
Yd=data.matrix(Table_7_6[,2])
Yd
#estimate the equation
beta_hat=(solve(t(x1)%*%x1))%*%(t(x1)%*%Yd)
beta_hat
#use command "lm"
mudel1=lm(Y~X2+X3+X4+X5)
summary(model1)
summary(mudel1)
qf(0.05, 6, 53, lower.tail=FALSE)
qt(0,.025, 17, lower.tail = FALSE)
t.test(0.025,17,lower.tail = FALSE)
qt(0.025,17,lower.tail = FALSE)
qt(0.05,17,lower.tail = FALSE)
qt(0.025,17,lower.tail = TRUE)
qt(0.025,53,lower.tail = FALSE)
qt(0.025,55,lower.tail = FALSE)
q()
qt(0.025,9,lower.tail = FALSE)
qt(0.025,8,lower.tail = FALSE)
q()
qt(0.025,18,lower.tail = FALSE)
q()
qt(0.025,3,lower.tail = FALSE)
q()
qt(0.025,8,lower.tail = FALSE)
qt(0.005,8,lower.tail = FALSE)
q()
qt(0.05,8,lower.tail = FALSE)
qt(0.005,8,lower.tail = FALSE)
qt(0.025,8,lower.tail = FALSE)
q()
qt(0.025,27,lower.tail = FALSE)
qt(0.05,27,lower.tail = FALSE)
q()
qt(0.05,36,lower.tail = FALSE)
qf(0.025,2,36,lower.tail = FALSE)
qf(0.05,2,36,lower.tail = FALSE)
q()
qf(0.05,2,17,lower.tail = FALSE)
q()
qt(0.025,17,lower.tail = FALSE)
qf(0.05,1,17,lower.tail = FALSE)
qf(0.05,56,lower.tail = FALSE)
qf(0.05,3,56,lower.tail = FALSE)
qf(0.05,1,56,lower.tail = FALSE)
qf(0.05,2,56,lower.tail = FALSE)
qf(0.05,56,2,lower.tail = FALSE)
qf(0.05,2,56,lower.tail = TRUE)
qf(0.05,2,56,upper.tail = TRUE)
q()
qt(0.1,96,lower.tail=False)
qt(0.1,96,lower.tail=FALSE)
qf(0.05,2,31,lower.tail=FALSE)
qf(0.05,2,31,lower.tail=TRUE)
qf(0.05,2,31,lower.tail=FALSE)
qf(0.05,2,31)
qf(0.05,31,2)
qt(0.025,37,lower.tail=FALSE)
qt(0.025)
qt(0.025,99999)
qt(0.025,59,lower.tail=FALSE)
qf(0.05,2,59,lower.tail=FALSE)
q()
qf(0.05,2,56,lower.tail=FALSE)
q()
q()
View(ata)
setwd("D:/Năm 3 - HK2/Time Series")
setwd("D:/Năm 3 - HK2/Time Series/R-studio")
5*5
A <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 4)
View(A)
b <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 2, byrow = True)
b <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 2, byrow = TRUE)
View(b)
c <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 2, byrow = FALSE)
View(c)
View(b)
View(c)
View(b)
View(A)
run <- c(5,2,20)
A <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 4)
View(A)
b <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 2, byrow = True)
library(rgl)
install.packages(c("cluster", "foreign", "lattice", "Matrix", "mgcv", "nlme", "rpart"))
library(survival)
library(foreign)
install.packages("rgl")
library(rgl)
scatterplot(prestige ~ income|type, boxplots=FALSE, span = 0.75, data = Prestige)
scatterplot(prestige ~ income|type, boxplots=FALSE, span = 0.75, data = Prestige)
scatterplot(prestige ~ income|type, boxplots=FALSE, span = 0.75, data = Prestige)
R
$ R
cd work
q()
arsim<-function(phis, sigsq, T){
p<-length(phis) #find the number of lags in our AR
noise<-rnorm(T+p, sd=sqrt(sigsq)) #generate the white noise plus a few to get started
x<-c(noise[1:p],rep(0,T)) #put the initial noise terms in and set the rest to zero
for (i in (p+1):(T+p)){ #this loop generates the AR series with the recursive formula
x[i]<-phis %*% x[i-(1:p)] +noise[i]
}
x<-x[(p+1):(T+p)] #throw away those initial starting points
x #return
}
setwd('D:\ad\PersonalProject\FPT')
data <- read.csv("PNJ.csv",
header = FALSE, sep = "\t")
setwd("D:/ad/PersonalProject/FPT")
data <- read.csv("PNJ.csv",
header = FALSE, sep = "\t")
data
plot.ts(data)
View(data)
data <- read.csv("PNJ.csv",
header = FALSE, sep = ",")
plot.ts(data)
View(data)
data <- read.csv("PNJ.csv",
header = TRUE, sep = ",")
View(data)
View(data)
plot.ts(data.Close)
data[1]
data['Close']
plot.ts(data['Close'])
plot.ts(diff(data['Close']))
plot.ts(data['Close'])
data.Close
import pandas as pd
data <- read.csv("PNJ.csv",
header = TRUE, sep = ",")
